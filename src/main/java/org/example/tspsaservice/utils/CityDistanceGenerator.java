package org.example.tspsaservice.utils;

import lombok.Getter;
import org.springframework.stereotype.Component;

@Component
public class CityDistanceGenerator {

    @Getter
    private final String[] places = {"Александров", "Боголюбово", "Владимир", "Гороховец", "Гусь Хрустальный", "Иваново", "Калязин",
            "Кидекша", "Кострома", "Москва", "Муром", "Палех", "Переславль-Залеский", "Плес", "Ростов",
            "Рыбинск", "Сергиев Посад", "Суздаль", "Тутаев", "Углич", "Шуя", "Юрьев Польcкий", "Ярославль"};
    private final double[][] dists = {
            {170, 160, 310, 230, 260, 150, 190, 260, 130, 290, 320, 71, 320, 140, 280, 56, 190, 230, 220, 290, 110, 190},
            {10, 140, 83, 110, 300, 37, 220, 200, 140, 150, 150, 180, 180, 310, 190, 35, 260, 270, 130, 76, 230},
            {150, 74, 110, 290, 38, 220, 190, 130, 160, 140, 180, 200, 310, 180, 35, 270, 280, 140, 70, 230},
            {200, 180, 440, 180, 280, 340, 94, 120, 290, 240, 320, 370, 330, 170, 330, 410, 150, 220, 290},
            {190, 360, 110, 290, 260, 110, 210, 210, 260, 270, 380, 250, 110, 340, 350, 190, 140, 300},
            {240, 83, 110, 300, 220, 66, 190, 69, 130, 200, 270, 80, 160, 220, 34, 120, 120},
            {260, 240, 190, 420, 300, 120, 300, 120, 130, 120, 260, 150, 53, 270, 200, 170},
            {190, 220, 170, 120, 140, 150, 150, 280, 220, 6, 230, 240, 91, 66, 190},
            {340, 330, 170, 190, 73, 130, 170, 270, 180, 130, 190, 140, 260, 84},
            {320, 350, 140, 400, 210, 350, 76, 220, 300, 240, 330, 210, 260},
            {170, 270, 290, 330, 420, 310, 170, 370, 410, 190, 200, 340},
            {260, 110, 190, 260, 330, 120, 220, 280, 32, 180, 180},
            {250, 66, 210, 73, 140, 160, 150, 220, 74, 120},
            {190, 230, 330, 150, 190, 250, 100, 190, 140},
            {140, 130, 150, 96, 92, 160, 130, 57},
            {280, 270, 48, 84, 230, 270, 85},
            {220, 230, 160, 290, 140, 190},
            {230, 240, 89, 62, 190},
            {100, 190, 230, 41},
            {250, 210, 110},
            {150, 150},
            {190},
            {}
    };

    private double[][] convertToFullMatrix(double[][] upperTriangular, int size) {
        double[][] fullMatrix = new double[size][size];
        for (int i = 0; i < size; i++) {
            for (int j = i; j < size; j++) {
                if (i == j) {
                    fullMatrix[i][j] = 0;
                } else {
                    fullMatrix[i][j] = upperTriangular[i][j - i - 1];
                    fullMatrix[j][i] = upperTriangular[i][j - i - 1];
                }
            }
        }
        return fullMatrix;
    }

    public double[][] getDistance() {
        return convertToFullMatrix(dists, places.length);
    }
}
